// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Project {
  id             Int            @id @default(autoincrement())
  name           String         @unique
  intro          String?
  logo           String?
  symbol         String         @unique
  pointConsensus String
  createAt       DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  deleted        Boolean        @default(false)
  contributions  Contribution[]
  members        Member[]
}

model User {
  id            Int            @id @default(autoincrement())
  avatar        String?
  bio           String?
  wallet        String         @unique
  contributions Contribution[]
  members       Member[]
  MintRecord    MintRecord[]
}

enum Status {
  UNREADY
  READY
  CLAIM
  SUCCESS
  FAIL
}

model Contribution {
  id         Int          @id @default(autoincrement())
  detail     String
  proof      String
  credit     Int
  toIds      Int[]
  status     Status       @default(UNREADY)
  argee      Int          @default(0)
  disagree   Int          @default(0)
  owner      User         @relation(fields: [ownerId], references: [id])
  ownerId    Int
  project    Project      @relation(fields: [projectId], references: [id])
  projectId  Int
  endAt      DateTime
  createAt   DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  deleted    Boolean      @default(false)
  MintRecord MintRecord[]
}

enum MintStatus {
  UNMINT
  MINTED
}

model MintRecord {
  id             Int          @id @default(autoincrement())
  user           User         @relation(fields: [userId], references: [id])
  userId         Int
  credit         Int
  contribution   Contribution @relation(fields: [contributionId], references: [id])
  contributionId Int
  status         MintStatus   @default(UNMINT)
  createAt       DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  deleted        Boolean      @default(false)
}

enum Role {
  ADMIN
  MEMBER
}

model Member {
  id        Int      @id @default(autoincrement())
  wallet    String
  user      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  project   Project  @relation(fields: [projectId], references: [id])
  projectId Int
  role      Role     @default(ADMIN)
  createAt  DateTime @default(now())
  updatedAt DateTime @updatedAt
  deleted   Boolean  @default(false)
}
